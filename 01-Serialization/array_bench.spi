type dim = i32
union leduc_action = Fold | Call | Raise
union leduc_seq = Action : leduc_action | Card : dim

open serialization.array

inl main() =
    inl print x : () = $"print(!x) " 
    inl unit = unit : pu dim _
    inl action : pu dim leduc_action = alt {Fold=unit; Call=unit; Raise=unit}
    inl card = int 3
    inl street = card ** array 4 action
    inl streets = array 2 street

    inl args : a dim (dim * a dim leduc_action) = a ;[
        0,a ;[Call;Raise;Raise;Call]
        2,a ;[Call]
        ]

    !!!!Import("time")
    inl a : f64 = $"time.perf_counter()"
    loopw.for' {from=0i32; nearTo=100_000} fun _ =>
        serialize streets args |> ignore
    inl b : f64 = $"time.perf_counter()"
    print (b-a)